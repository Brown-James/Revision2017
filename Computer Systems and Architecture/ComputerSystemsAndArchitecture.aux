\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Fundamentals of Computer Organisation}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}The von Neumann Architecture and Executing Programs}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}von Neumann Architecture}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The von Neumann Architecture}}{1}}
\newlabel{fig:von neumann}{{1}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}The Clock Cycle}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}Executing Programs}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Harvard Architecture}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Case Studies}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.1}MIPS}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The MIPS processor}}{4}}
\newlabel{fig:mips processor}{{2}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.2}Intel x86}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Instruction Sets and Assembly Language}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Types of Instruction Set}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Types of MIPS Instructions}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}MIPS Register Conventions}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Machine Code}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces The conventions of use for all registers in the MIPS architecture}}{7}}
\newlabel{fig:mips register conventions}{{3}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces MIPS instruction format for register operations}}{7}}
\newlabel{fig:mips register operations}{{4}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces MIPS instruction format for load/store operations}}{7}}
\newlabel{fig:mips load store operations}{{5}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}Further MIPS instructions}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {4}CPU Microarchitecture}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}MIPS Microarchitecture}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.1}Instruction Fetch}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Datapath elements for instruction fetch}}{8}}
\newlabel{fig:datapath instruction fetch}{{6}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.2}Instruction Execution}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces We have integrated an adder to increment the PC}}{9}}
\newlabel{fig:datapath_pc_adder}{{7}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Registers and their input/output ports}}{9}}
\newlabel{fig:registers input output}{{8}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces The ALU and it's input/output ports}}{10}}
\newlabel{fig:alu}{{9}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces The datapath for R-type instructions}}{10}}
\newlabel{fig:r type datapath}{{10}{10}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.3}Branches and Jumps}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Datapath for branch instructions}}{11}}
\newlabel{fig:branch jump datapath}{{11}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Integrating the Datapath}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}CPU Control}{11}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Digital Logic}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Digital Logic}{11}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.1}Transistors}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces (Left) Circuit symbol for an NMOS transistor. (Right) Circuit symbol for a PMOS transistor}}{11}}
\newlabel{fig:transistors}{{12}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces The logical operator \textbf  {NOT} built from transistors}}{11}}
\newlabel{fig:not_transistors}{{13}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces (Left) A \textbf  {NAND} gate built from four transistors. (Right) A \textbf  {NOR} gate built from four transistors}}{12}}
\newlabel{fig:nand_nor_transistors}{{14}{12}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.2}Decoders}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Truth table for a two input decoder}}{12}}
\newlabel{fig:truth table two input decoder}{{15}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces A 2-4 decoder built from logic gates}}{13}}
\newlabel{fig:2 4 decoder}{{16}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.3}Multiplexers}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces Truth table for a 2-1 multiplexer}}{13}}
\newlabel{fig:2 1 multiplexer}{{17}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces A 2-1 multiplexer built from logic gates}}{13}}
\newlabel{fig:2 1 multiplexer}{{18}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.4}A Simple Adder}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces Logic gates which implemet a half-adder}}{14}}
\newlabel{fig:half adder}{{19}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces A full-adder built from two half adders and an \textbf  {XOR} gate}}{14}}
\newlabel{fig:full_adder}{{20}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.5}A Simple ALU}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Number Representation}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.1}Positive Integers}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces A simple ALU capable of performing addition, bitwise-AND and bitwise-OR operations}}{15}}
\newlabel{fig:simple ALU}{{21}{15}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.2}Positive Real Numbers}{15}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.3}Negative Numbers and Two's Complement}{15}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.4}Floating Point Numbers}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Clocked Logic}{17}}
\@writefile{toc}{\contentsline {section}{\numberline {6}I/O and Peripherals}{17}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Improving Performance}{17}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}Caches and Virtual Memory}{17}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2}Pipelining and Branch Prediction}{17}}
