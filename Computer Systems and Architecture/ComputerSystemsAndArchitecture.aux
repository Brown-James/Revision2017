\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Fundamentals of Computer Organisation}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}The von Neumann Architecture and Executing Programs}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}von Neumann Architecture}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The von Neumann Architecture}}{1}}
\newlabel{fig:von neumann}{{1}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}The Clock Cycle}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}Executing Programs}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Harvard Architecture}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Case Studies}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.1}MIPS}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The MIPS processor}}{4}}
\newlabel{fig:mips processor}{{2}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.2}Intel x86}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Instruction Sets and Assembly Language}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Types of Instruction Set}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Types of MIPS Instructions}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}MIPS Register Conventions}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Machine Code}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces The conventions of use for all registers in the MIPS architecture}}{7}}
\newlabel{fig:mips register conventions}{{3}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces MIPS instruction format for register operations}}{7}}
\newlabel{fig:mips register operations}{{4}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces MIPS instruction format for load/store operations}}{7}}
\newlabel{fig:mips load store operations}{{5}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}Further MIPS instructions}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {4}CPU Microarchitecture}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}MIPS Microarchitecture}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.1}Instruction Fetch}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Datapath elements for instruction fetch}}{8}}
\newlabel{fig:datapath instruction fetch}{{6}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.2}Instruction Execution}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces We have integrated an adder to increment the PC}}{9}}
\newlabel{fig:datapath_pc_adder}{{7}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Registers and their input/output ports}}{9}}
\newlabel{fig:registers input output}{{8}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces The ALU and it's input/output ports}}{10}}
\newlabel{fig:alu}{{9}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces The datapath for R-type instructions}}{10}}
\newlabel{fig:r type datapath}{{10}{10}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.3}Branches and Jumps}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces The datapath for load/store instructions}}{11}}
\newlabel{fig:load store instructions datapath}{{11}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Datapath for branch instructions}}{11}}
\newlabel{fig:branch jump datapath}{{12}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Integrating the Datapath}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces The integrated datapath for ALU and load/store instructions}}{12}}
\newlabel{fig:alu load store datapath}{{13}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces The integrated datapath for the ALU and load/store instructions, and instruction fetch}}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Integrated datapath for ALU and load/store instructions, instruction fetch and branches}}{13}}
\newlabel{fig:integrated branch datapath}{{15}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Integrated datapath for ALU and load/store instructions, instruction fetch, branches and jumps}}{13}}
\newlabel{fig:fully_integrated_datapath}{{16}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces The complete MIPS datapath}}{14}}
\newlabel{fig:complete mips datapath}{{17}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}CPU Control}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.3.1}ALU Control}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.3.2}The Main Control Unit}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces Summary of ALU control signals}}{15}}
\newlabel{fig:alu control signals}{{18}{15}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Digital Logic}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Digital Logic}{15}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.1}Transistors}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces (Left) Circuit symbol for an NMOS transistor. (Right) Circuit symbol for a PMOS transistor}}{15}}
\newlabel{fig:transistors}{{19}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces The logical operator \textbf  {NOT} built from transistors}}{15}}
\newlabel{fig:not_transistors}{{20}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces (Left) A \textbf  {NAND} gate built from four transistors. (Right) A \textbf  {NOR} gate built from four transistors}}{16}}
\newlabel{fig:nand_nor_transistors}{{21}{16}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.2}Decoders}{16}}
\@writefile{lof}{\contentsline {figure}{\numberline {22}{\ignorespaces Truth table for a two input decoder}}{16}}
\newlabel{fig:truth table two input decoder}{{22}{16}}
\@writefile{lof}{\contentsline {figure}{\numberline {23}{\ignorespaces A 2-4 decoder built from logic gates}}{17}}
\newlabel{fig:2 4 decoder}{{23}{17}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.3}Multiplexers}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {24}{\ignorespaces Truth table for a 2-1 multiplexer}}{17}}
\newlabel{fig:2 1 multiplexer}{{24}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {25}{\ignorespaces A 2-1 multiplexer built from logic gates}}{17}}
\newlabel{fig:2 1 multiplexer}{{25}{17}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.4}A Simple Adder}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {26}{\ignorespaces Logic gates which implemet a half-adder}}{18}}
\newlabel{fig:half adder}{{26}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {27}{\ignorespaces A full-adder built from two half adders and an \textbf  {XOR} gate}}{18}}
\newlabel{fig:full_adder}{{27}{18}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.5}A Simple ALU}{18}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Number Representation}{18}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.1}Positive Integers}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {28}{\ignorespaces A simple ALU capable of performing addition, bitwise-AND and bitwise-OR operations}}{19}}
\newlabel{fig:simple ALU}{{28}{19}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.2}Positive Real Numbers}{19}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.3}Negative Numbers and Two's Complement}{19}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.4}Floating Point Numbers}{20}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Clocked Logic}{20}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.3.1}Clocks and flip-flops}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {29}{\ignorespaces A timing diagram showing the effect of banks of ﬂip-ﬂops on the propagation of a signal through a circuit}}{21}}
\newlabel{fig:flip flops}{{29}{21}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.3.2}The Master-Slave Flip-Flop}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {30}{\ignorespaces The most basic memory element, a pair of cross coupled inverters}}{22}}
\newlabel{cross coupled inverters}{{30}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {31}{\ignorespaces A six transistor SRAM cell. When the enable signal E is 0, the memory element is isolated}}{22}}
\newlabel{fig:sram cell}{{31}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {32}{\ignorespaces Cross coupled NOR gates form a bistable circuit}}{22}}
\newlabel{fig:cross coupled nor gates}{{32}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {33}{\ignorespaces A modified bistable circuit forms a D-latch}}{22}}
\newlabel{fig:bistable d latch}{{33}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {34}{\ignorespaces A pair of D-latches form an edge-triggered flip-flop}}{23}}
\newlabel{fig:edge triggered flip flop}{{34}{23}}
\@writefile{lof}{\contentsline {figure}{\numberline {35}{\ignorespaces A write-enabled D-type flip-flop}}{23}}
\newlabel{fig:d type flip flop}{{35}{23}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.3.3}Building a Register}{23}}
\@writefile{toc}{\contentsline {section}{\numberline {6}I/O and Peripherals}{23}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Input/Output Devices}{23}}
\@writefile{lof}{\contentsline {figure}{\numberline {36}{\ignorespaces A write enabled D-type flop flop}}{24}}
\newlabel{fig:flip flop register}{{36}{24}}
\@writefile{lof}{\contentsline {figure}{\numberline {37}{\ignorespaces Schematic of the bus}}{24}}
\newlabel{fig:bus schematic}{{37}{24}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}I/O Models}{24}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3}Polling}{25}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4}Interrupts}{25}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.5}Direct Memory Access (DMA)}{25}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Improving Performance}{26}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}Caches and Virtual Memory}{26}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.1.1}Caches}{26}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.1.2}Structure and Design of Caches}{26}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.1.3}Cache Associativity}{27}}
\@writefile{lof}{\contentsline {figure}{\numberline {38}{\ignorespaces Address mapping in a 2-way set associative cache}}{27}}
\newlabel{fig:n way associative cache}{{38}{27}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.1.4}Refill Strategies}{27}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.1.5}Performance Benefits of Caches}{27}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.1.6}Writing Strategies}{28}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2}Pipelining and Branch Prediction}{29}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.2.1}Pipelining}{29}}
\@writefile{lof}{\contentsline {figure}{\numberline {39}{\ignorespaces The MIPS five stage pipeline}}{30}}
\newlabel{fig:mips five stage pipeline}{{39}{30}}
\@writefile{lof}{\contentsline {figure}{\numberline {40}{\ignorespaces Execution is delayed by two cycles until the results of the \texttt  {addi} instruction are available}}{30}}
\newlabel{fig:pipelining bubble}{{40}{30}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.2.2}Branch Prediction}{30}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.2.3}Superscalar Processors}{31}}
