\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Pointers and Memory Management}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Pointers}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces A box-and-arrow diagram}}{1}}
\newlabel{fig:bow arrow diagram}{{1}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The hardware level of a box-and-arrow diagram}}{1}}
\newlabel{fig:box arrow diagram memory}{{2}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}The * and \& Operators}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}The Null Pointer}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Memory Management with \texttt  {malloc} and \texttt  {free}}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}The \texttt  {sizeof} operator}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}Crashes vs Memory Errors}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Structures in C}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}The $->$ operator}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Pointer Arithmetic and Arrays}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Arrays and Strings in C}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces A piece of code to delete all elements of a linked list}}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces The same code with a use after free error}}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.1}The Arguments to Main}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Pointer Arithmetic}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Buffer Overflows}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}First-class functions in C and C++}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Typed Trees in C}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}\texttt  {struct}, \texttt  {union} and \texttt  {enum}}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.1}\texttt  {union}}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.2}\texttt  {enum}}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.3}Tagged unions idiom}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Typed Trees}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.1}Trees with values only at the leaves}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.2.2}AST for Lisp-style expresions}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces A grammar for a Lisp-style language}}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces The abstract syntax tree of this language}}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {6}From C and Java to C++}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Virtual Functions}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.1.1}Pure Virtual Functions}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}New and Delete}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3}Strings in C++}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Templates in C++}{9}}
